# -*- coding: utf-8 -*-
"""google-colab.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CzU5kjA3KZ3CsSXRK67RW0yszNh_iZlv
"""

import matplotlib.pyplot as plt; plt.rcdefaults()
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
 
objects = ('HayesRoth (132)', 'Lymphography (148)', 'Glass (214)', 'BalanceScale (625)', 'ContraceptiveMethodChoice (1473)', 'Car (1728)', 'Abalone (4177)', 'Nursery (12960)', 'LetterRecognition (20000)', 'Chess (28056)')
y_pos = np.arange(len(objects))
accuracy_decorate = [0.987,0.923,1.0,0.253,0.908,0.997,0.922,1.0,0.993,0.98]
accuracy_decorate_TGAN = [0,0,0,0.225,0.886,0,0.913,0,0.986,0.976]

plt.figure(figsize=(27, 3))  # width:20, height:3 
plt.bar(range(len(accuracy_decorate)), accuracy_decorate, align='edge', width=0.2,color='r')
plt.bar(range(len(accuracy_decorate_TGAN)), accuracy_decorate_TGAN, align='center', width=0.2,color='b')
plt.xticks(y_pos, objects)
plt.ylabel('Accuracy')
plt.title('Accuracy per samples')

red_patch = mpatches.Patch(color='red', label='Decorate')
blue_patch = mpatches.Patch(color='blue', label='Decorate+TGAN')
plt.legend(handles=[red_patch,blue_patch])
 
plt.show()

import matplotlib.pyplot as plt; plt.rcdefaults()
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
 
objects = ('HayesRoth (132)', 'Lymphography (148)', 'Glass (214)', 'BalanceScale (625)', 'ContraceptiveMethodChoice (1473)', 'Car (1728)', 'Abalone (4177)', 'Nursery (12960)', 'LetterRecognition (20000)', 'Chess (28056)')
y_pos = np.arange(len(objects))
train_time_decorate = [0.369,0.421,0.422,0.467,0.537,0.583,1.376,2.184,5.621,8.809]
train_time_decorate_TGAN = [0,0,0,0.516,0.648,0,2.081,0,9.973,14.986]

plt.figure(figsize=(27, 3))  # width:20, height:3 
plt.bar(range(len(train_time_decorate)), train_time_decorate, align='edge', width=0.2,color='r')
plt.bar(range(len(train_time_decorate_TGAN)), train_time_decorate_TGAN, align='center', width=0.2,color='b')
plt.xticks(y_pos, objects)
plt.ylabel('Training Time')
plt.title('Train time in seconds per samples')

red_patch = mpatches.Patch(color='red', label='Decorate')
blue_patch = mpatches.Patch(color='blue', label='Decorate+TGAN')
plt.legend(handles=[red_patch,blue_patch])
 
plt.show()

import matplotlib.pyplot as plt; plt.rcdefaults()
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
 
objects = ('HayesRoth (132)', 'Lymphography (148)', 'Glass (214)', 'BalanceScale (625)', 'ContraceptiveMethodChoice (1473)', 'Car (1728)', 'Abalone (4177)', 'Nursery (12960)', 'LetterRecognition (20000)', 'Chess (28056)')
y_pos = np.arange(len(objects))
predict_time_decorate = [0.031,0.028,0.033,0.038,0.031,0.031,0.049,0.045,0.077,0.112]
predict_time_decorate_TGAN = [0,0,0,0.034,0.031,0,0.046,0,0.079,0.108]

plt.figure(figsize=(27, 3))  # width:20, height:3 
plt.bar(range(len(predict_time_decorate)), predict_time_decorate, align='edge', width=0.2,color='r')
plt.bar(range(len(predict_time_decorate_TGAN)), predict_time_decorate_TGAN, align='center', width=0.2,color='b')
plt.xticks(y_pos, objects)
plt.ylabel('Training Time')
plt.title('Predict time in seconds per samples')

red_patch = mpatches.Patch(color='red', label='Decorate')
blue_patch = mpatches.Patch(color='blue', label='Decorate+TGAN')
plt.legend(handles=[red_patch,blue_patch])
 
plt.show()

2+3