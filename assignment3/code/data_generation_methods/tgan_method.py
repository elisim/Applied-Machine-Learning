import pandas as pd
from sklearn import preprocessing


class TganDataGeneration():
    """
    Data generation using TGAN: A Tabular Data Synthesizer (github.com/DAI-Lab/TGAN)
    """
    
    def __init__(self):
        self._synthetic = None
        self.dataset = None
        
    def gen_data(self, X=None, **kwargs):
        """
        X - pandas dataframe with header 
        dataset - dataset name
        """
        self.dataset = kwargs.get('dataset', 'abalone')
        self.label_encoder = kwargs.get('label_encoder', None)
        
        path = f'data_generation_methods/TGAN-Results/expdir/{self.dataset}/synthetic0_2.csv'
        self._synthetic = pd.read_csv(path, header=None)
        if(self.dataset == 'letter-recognition'): # class in the first column
            X_art = self._synthetic.drop(self._synthetic.columns[[0]], axis=1)
        else:
            X_art = self._synthetic.drop(self._synthetic.columns[[-1]], axis=1)
        
        return pd.get_dummies(X_art)

                
    def label_data(self, X_art=None, y_probs=None):
        """
        return: labels generated by tgan
        """
        if(self.dataset == 'letter-recognition'): # class in the first column
            y = self._synthetic.iloc[:,0]
        else:
            y = self._synthetic.iloc[:,-1]
        if self.label_encoder != None:
            return self.label_encoder.fit_transform(y)
        raise ValueError("Plaese provide a label encoder")

    def __repr__(self):
        return '<class \'{}\', dataset={}>'.format(self.__class__.__name__, self.dataset)
        
        
        
